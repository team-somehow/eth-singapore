# Generated by Django 5.1.1 on 2024-09-20 19:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='project',
            name='photo_url',
        ),
        migrations.AddField(
            model_name='project',
            name='event',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='app.event'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='project',
            name='photo',
            field=models.URLField(default=1),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='event',
            name='photo',
            field=models.URLField(),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.event')),
                ('project1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project1_votes', to='app.project')),
                ('project2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project2_votes', to='app.project')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winning_votes', to='app.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectMatchup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project1_wins', models.IntegerField(default=0)),
                ('project2_wins', models.IntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.event')),
                ('project1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchup_project1', to='app.project')),
                ('project2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matchup_project2', to='app.project')),
            ],
            options={
                'unique_together': {('event', 'project1', 'project2')},
            },
        ),
        migrations.CreateModel(
            name='UserPairing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.event')),
                ('project1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairing_project1', to='app.project')),
                ('project2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pairing_project2', to='app.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'event', 'project1', 'project2')},
            },
        ),
    ]
